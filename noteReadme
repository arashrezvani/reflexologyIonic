…or create a new repository on the command line
echo "# medicineApp" >> README.md
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/arashrezvani/medicineApp.git
git push -u origin main



…or push an existing repository from the command line
git remote add origin https://github.com/arashrezvani/medicineApp.git
git branch -M main
git push -u origin main



بررسی ریموت‌های موجود: ابتدا بررسی کنید که کدام ریموت‌ها به مخزن متصل هستند:

bash
Copy code
git remote -v
این دستور آدرس مخزن‌های متصل شده (remote) را نمایش می‌دهد.

حذف ریموت قبلی (در صورت نیاز): اگر آدرس اشتباه وارد شده باشد یا می‌خواهید ریموت جدیدی اضافه کنید، می‌توانید ریموت قبلی را با دستور زیر حذف کنید:

bash
Copy code
git remote remove origin
اضافه کردن ریموت جدید (در صورت نیاز): بعد از حذف ریموت قدیمی، می‌توانید ریموت جدید را به مخزن اضافه کنید:

bash
Copy code
git remote add origin https://github.com/username/repository.git
توجه: در این مرحله باید نام کاربری و نام مخزن خود را به جای username و repository وارد کنید.

Push کردن به مخزن: حالا که مطمئن شدید ریموت به درستی تنظیم شده است، پروژه را push کنید:

bash
Copy code
git push -u origin master


برای حذف یک مخزن (Repository) از گیت‌هاب، می‌توانید مراحل زیر را انجام دهید:

1. وارد حساب کاربری گیت‌هاب شوید:
به GitHub بروید و وارد حساب کاربری خود شوید.
2. مخزن مورد نظر را انتخاب کنید:
در صفحه اصلی، مخزنی را که قصد حذف آن را دارید پیدا کنید و روی آن کلیک کنید تا به صفحه مخزن بروید.
3. رفتن به تنظیمات (Settings):
در بالای صفحه مخزن، بر روی Settings کلیک کنید. (معمولاً در تب‌های بالا سمت راست صفحه قرار دارد.)
4. پایین صفحه تنظیمات بروید:
در صفحه تنظیمات به پایین صفحه اسکرول کنید تا به بخش Danger Zone برسید.
5. حذف مخزن (Delete Repository):
در قسمت Danger Zone گزینه Delete this repository را مشاهده می‌کنید. روی آن کلیک کنید.
6. تأیید حذف:
پس از کلیک بر روی Delete this repository، یک پنجره باز می‌شود که از شما می‌خواهد تا نام مخزن را برای تأیید حذف وارد کنید.
نام مخزن (شامل نام کاربری و نام مخزن) را دقیقاً همانطور که نشان داده شده وارد کنید و سپس روی I understand the consequences, delete this repository کلیک کنید.
7. مخزن حذف شد:
پس از این کار، مخزن به طور کامل از حساب کاربری شما در گیت‌هاب حذف می‌شود و دیگر به آن دسترسی نخواهید داشت.
توجه: حذف مخزن به طور دائمی انجام می‌شود و اطلاعات پروژه شما دیگر در دسترس نخواهد بود.




جابجا شدن به برنچ دیگر:
برای جابجا شدن به یک برنچ دیگر، از دستور زیر استفاده کنید:

bash
Copy code
git checkout branch-name
جایگزین کنید branch-name با نام برنچ مورد نظرتان.

ایجاد و جابجایی به برنچ جدید:
اگر می‌خواهید یک برنچ جدید ایجاد کرده و به آن جابجا شوید:

bash
Copy code
git checkout -b new-branch-name
حذف برنچ:
برای حذف یک برنچ محلی که دیگر به آن نیازی ندارید، از دستور زیر استفاده کنید:

bash
Copy code
git branch -d branch-name
اگر برنچ در حال حاضر merge نشده و می‌خواهید آن را به هر حال حذف کنید، از گزینه -D استفاده کنید:

bash
Copy code
git branch -D branch-name
حذف برنچ از مخزن ریموت:
برای حذف یک برنچ از مخزن ریموت (GitHub یا GitLab) از دستور زیر استفاده کنید:

bash
Copy code
git push origin --delete branch-name
به این ترتیب می‌توانید برنچ‌ها را مدیریت کنید.


اگه خواستم از گیتم یه بگ اپ بگیرم چه کدی بزنم


ChatGPT said:
سؤال خیلی خوبیه! 👌
برای گرفتن بک‌آپ از وضعیت فعلی پروژه با Git، چند روش وجود داره. بستگی داره منظورت از بک‌آپ چیه:

✅ ۱. ساخت یک برنچ جدید (ساده‌ترین و بهترین روش)
اگه فقط می‌خوای بک‌آپ بگیری تا بعداً بهش برگردی، یه برنچ جدید بساز:

bash
Copy
Edit
git checkout -b backup-before-experiment
یا اگر در rebase گیر کردی، بهتره اول از وضعیت فعلی بک‌آپ بگیری:

bash
Copy
Edit
git branch backup-$(date +%Y%m%d-%H%M%S)
این دستور یه برنچ به اسم مثلاً backup-20250421-1512 درست می‌کنه.

✅ ۲. استیج گرفتن همه فایل‌ها و کامیت کردن به‌عنوان بک‌آپ
مثلاً:

bash
Copy
Edit
git add .
git commit -m "Backup before merging main"
مناسب وقتی هست که تغییرات ذخیره نشده زیاد داری و نمی‌خوای از دست برن.

✅ ۳. ساخت یک stash (بک‌آپ موقتی داخل stash)
اگر نمی‌خوای الان برنچ بزنی یا کامیت کنی ولی نمی‌خوای تغییراتت گم بشه:

bash
Copy
Edit
git stash push -m "Backup before trying rebase"
بعداً می‌تونی ببینیش:

bash
Copy
Edit
git stash list
و برش گردونی:

bash
Copy
Edit
git stash apply
# یا
git stash pop
✅ ۴. کپی پوشه پروژه (روش آفلاین و دستی)
یک روش خیلی ساده هم هست: کل پوشه پروژه‌ات رو کپی کن یه‌جای دیگه 😄

می‌خوای من یه پیشنهاد شخصی بدم؟ اگه الان وسط rebase هستی، بهتره قبل از هر کاری بزنی:

bash
Copy
Edit
git branch backup-before-fix
تا هر بلایی بیاد، یه نسخه پشتیبان از وضعیت فعلیت داشته باشی 💾

اگه بگی دقیقاً می‌خوای چی رو نگه‌داری (فایل‌ها؟ تاریخچه؟ قبل از rebase؟)، می‌تونم بهترین روش رو پیشنهاد بدم.



ChatGPT said:
سلام 👋
اگر توی یه برنچ مثلاً به اسم feature-x تغییراتی دادی و حالا می‌خوای اون تغییرات رو روی main اعمال کنی، دو روش اصلی داری: merge یا rebase. اینجا ساده‌ترین و رایج‌ترین روش یعنی merge رو برات توضیح می‌دم:

✅ روش ۱: استفاده از merge
bash
Copy
Edit
# برو روی برنچ main
git checkout main

# آخرین تغییرات رو از ریموت بیار (اختیاری ولی بهتره):
git pull origin main

# حالا برنچ feature-x رو با main merge کن:
git merge feature-x

# در صورت نیاز:
git push origin main
🔁 روش ۲: استفاده از rebase (در صورت نیاز به تاریخچه تمیزتر)
bash
Copy
Edit
# برو روی برنچ feature-x
git checkout feature-x

# ری‌بیسش کن روی آخرین main
git rebase main

# حالا برو روی main و تغییرات feature-x رو مرج کن (بدون commit اضافه):
git checkout main
git merge feature-x --ff-only

# یا اگر ری‌بیس شده باشه می‌تونی حتی fast-forward کنی
git push origin main




npm install emailjs-com
  import emailjs from 'emailjs-com';
  //ارسال ایمیل


https://www.emailjs.com/
ashe405@yahoo.com
@Rezvani67QWEqwe123*


ymail
ashe307
@Rezvani67QWEqwe123*
  
  sendEmail(){

      const serviceID = 'service_bxk9gwr';
      const templateID = 'template_458pxqk';
      const userID = 'oghorbpPPjhHHuyEX';
    
      const templateParams = {
        to_email: 'ashe405@yahoo.com',
        from_name: 'Your Name',
        message: 'This is a test email sent from Ionic app info mob : ' + this.message
      };
    
      console.log('befor Email sent successfully!');
      emailjs.send(serviceID, templateID, templateParams, userID)
        .then((response) => {
           console.log('Email sent successfully!', response.status, response.text);
        }, (err) => {
           console.error('Failed to send email:', err);
        });

      console.log('after Email sent successfully!');

  }


  //===============================    diagnostic بررسی اجازه داشتن         ========================================   

اجازه خواستن برای وصل شدن و فعال کردن مثلا وایفا

npm install cordova.plugins.diagnostic
npm install @awesome-cordova-plugins/diagnostic
npx cap sync


add in app.modeule and network.modeule.ts

in provide

import { Diagnostic } from '@awesome-cordova-plugins/diagnostic/ngx';

,
  providers: [Diagnostic] // اضافه کردن به providers

import { Diagnostic } from '@awesome-cordova-plugins/diagnostic/ngx';
  providers: [Diagnostic,



// ============================        دسترسي به اطلاعات گوشي        =====================================

npm install @capacitor/device
  const info = await Device.getInfo();
  const batteryInfo = await Device.getBatteryInfo();
  const languageCode = await Device.getLanguageCode();


// ============================        storage        =====================================


npm install @ionic/storage-angular @ionic/storage

در فایل app.module.ts، شما باید IonicStorageModule را به ماژول‌های خود اضافه کنید


import { IonicStorageModule } from '@ionic/storage-angular';
  imports: [
    IonicStorageModule.forRoot() // اضافه کردن این خط


ايجاد سرويس
ionic generate service services/storage/storage



// ============================        device        =====================================
 npm install @awesome-cordova-plugins/device
 npm install cordova-plugin-device

 اضافه کردن به providers در app.module.ts: باید Device را در بخش providers در فایل app.module.ts اضافه کنی:

 
  providers: [
    Device,
    Diagnostic,
    { provide: RouteReuseStrategy, 
    useClass: IonicRouteStrategy }],

// ============================        crypto        =====================================
npm install crypto-js
npm install --save-dev @types/crypto-js

 import * as crypto from 'crypto-js';

 


//===============================    برای ایکون و اسپلش        ========================================   


npm install @capacitor/assets --save-dev
npx capacitor-assets generate




//===============================     گرفتن خروجی         ========================================   
ionic build
ionic capacitor add android
ionic capacitor build android
npx cap copy
npx cap sync
npx capacitor-assets generate
npx cap open android



//===============================     گرفتن خروجی بدون اندروید استادیو         ========================================   

ionic build --prod
npx cap sync android

cd .\android\
./gradlew assembleRelease
./gradlew assembleDebug
./gradlew clean
gradle -v

cd app\build\outputs\apk\release

کپی کردن کلید در مسیر
jarsigner -verbose -keystore ashe-key.jks -signedjar app-release-signed.apk app-release-unsigned.apk ashe-key
jarsigner -verbose -sigalg SHA256withRSA -digestalg SHA-256 -keystore  ashe-key.jks -signedjar app-release-signed.apk app-release-unsigned.apk ashe-key
apksigner sign --ks ashe-key.jks --ks-key-alias ashe-key --key-pass pass:123456 --out app-release-signed.apk app-release-unsigned.apk

zipalign -v 4 app-release-signed.apk app-release-aligned.apk





// fodev.org ۸۱۱۸

freegate 127.0.0.1 8580


//===============================     گرفتن پی دی اف         ========================================   

npm i cordova-plugin-file
npm install @awesome-cordova-plugins/file
npm i cordova-plugin-file-opener2
npm install @awesome-cordova-plugins/file-opener
npm i pdfmake
npm i pdfmake-unicode
npm install @types/pdfmake --save-dev
npm install @ionic-native/file
npm install @ionic-native/file --legacy-peer-deps





npm install rxjs@7.8.1 --save
 npm cache clean --force      

 fodev.org



 گردیل سیستم من پروکسی گرفته بود
command Prompt سیستمون رو باز کنید
dir تایپ کنید
بعد cd کنید به gradle
با code . 
ویژال کد خود رو بازکنید
نگاه کنید در gradle.properties گردیل شما پروکسی نگرفته باشه اگه گردیلتون پروکسی گرفته کامنت یا پاکش کنید
که واسه گردیل سیستم من پروکسی گرفته بود پاکش کردم (چون از اون وی پی ان دیگه استفاده نمی‌کردم)
و بعدش با پروکسی x-vpn 
https://xvpn.io/download/vpn-win
وی پی ان رو فعال کردم بعدش sdk build tools 33.0.1 رو نصب کردم و الحمدللله مشکل برطرف شد.



برای شیر نظرات در شبکه های مجازی نیاز به نصب 

for share 


npm install @capacitor/share npx cap sync


jdk 21
رو نصب کردم
در 
envirmante system
Java_Home 
C:\Program Files\Java\jdk-21

و در
path
C:\Program Files\Java\jdk-21
و
%JAVA_HOME%\bin
رو اضافه میکنیم

در س ام دی ران تایپ میکنیم 
java -version
باید 21 باشه
در سی ام دی بزن
echo %JAVA_HOME%
باید باشه
C:\Program Files\Java\jdk-21
در سی ام دی بزن
where java
باید ادرس یه جا باشه
وگرنه ادرس های دیگه رو پاک کن


در فایل زیر 
android/app/build.gradle
اضافه میکنیم
android {
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }
    ...
}

در فایل زیر
android/gradle/wrapper/gradle-wrapper.properties
اضافه میکنیم
distributionUrl=https\://services.gradle.org/distributions/gradle-8.3-all.zip

در فایل 
فایل variables.gradle
تایپ میکنیم
ext {
    minSdkVersion = 24
    compileSdkVersion = 35
    targetSdkVersion = 35
    androidxAppCompatVersion = '1.6.1'
    androidxCoordinatorLayoutVersion = '1.2.0'
    coreSplashScreenVersion = '1.0.1'
    junitVersion = '4.13.2'
    androidxJunitVersion = '1.1.5'
    androidxEspressoCoreVersion = '3.5.1'
}
اگه چیزی غیرعادی تو فایل variables.gradle دیدی، درستش کن.



بعدش 
cd E:\arash\project\ionic\UltraMedicine\android
./gradlew clean
./gradlew build



برای ورژن 
npm install @capacitor/app --legacy-peer-deps